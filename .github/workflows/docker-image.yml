name: Publish Docker Images

on:
  push:
    branches:
      - staging
    tags:
      - 'v*'

jobs:

  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.10 ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          (cd backend/review && poetry install -n --no-dev)
      - name: Collect statics
        run: |
          (cd backend/review && cp sample.env .env && python manage.py collectstatic)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta for api
        id: meta_api
        uses: docker/metadata-action@v3
        with:
          images: kgolezardi/performance-review-api
          tags: |
            type=semver,pattern={{version}}
            type=raw,enable=${{github.ref == 'refs/heads/staging' }},value=dev-${{ github.run_number }}-{{sha}}
            type=raw,enable=${{github.ref == 'refs/heads/staging' }},value=dev
      - name: Docker meta for statics
        id: meta_statics
        uses: docker/metadata-action@v3
        with:
          images: kgolezardi/performance-review-statics
          tags: |
            type=semver,pattern={{version}}
            type=raw,enable=${{github.ref == 'refs/heads/staging' }},value=dev-${{ github.run_number }}-{{sha}}
            type=raw,enable=${{github.ref == 'refs/heads/staging' }},value=dev
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push api
        uses: docker/build-push-action@v2
        with:
          context: review
          file: review/api.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_api.outputs.tags }}
          labels: ${{ steps.meta_api.outputs.labels }}
      - name: Build and push statics
        uses: docker/build-push-action@v2
        with:
          context: review
          file: review/statics.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_statics.outputs.tags }}
          labels: ${{ steps.meta_statics.outputs.labels }}
